swirl()
library(swirl)
swirl()
my_sqrt <- sqrt(z-1)
print(my_sqrt)
my_sqrt
my_div <- z / my_sqrt
source('~/.active-rstudio-document', echo=TRUE)
scores = read.xlsx("C:\Users\prani\Dropbox (MIT)\Life Stats\Jeopardy Statistics.xlsx")
scores = read.xlsx("C:/Users/prani/Dropbox (MIT)/Life Stats/Jeopardy Statistics.xlsx")
library(xslx)
install.packages(xlsx)
install.packages(rjava)
install.packages(xlsxjars)
install.packages()
install.packages("xlsx")
source('~/Life Stats/jeopardy_stats_analysis.R', echo=TRUE)
library(xlsx)
source('~/Life Stats/jeopardy_stats_analysis.R', echo=TRUE)
install.packages("xlsx")
library("xlsx")
install.packages("readxl")
source('~/Life Stats/jeopardy_stats_analysis.R', echo=TRUE)
View(scores)
source('~/Life Stats/jeopardy_stats_analysis.R', echo=TRUE)
source('~/Life Stats/jeopardy_stats_analysis.R', echo=TRUE)
source('~/Life Stats/jeopardy_stats_analysis.R', echo=TRUE)
source('~/Life Stats/jeopardy_stats_analysis.R', echo=TRUE)
install.packages("RPostgreSQL")
install.packages("RPostgreSQL")
install.packages("sqldf")
install.packages("ggplot2")
install.packages("stargazer")
library("stargazer")
stargazer(attitude)
source('~/.active-rstudio-document', echo=TRUE)
attitude
df <- read.csv("cleaned_OI_state_data.csv")
df <- read.csv("cleaned_OI_state_data.csv")
source('C:/Users/prani/Dropbox (MIT)/2020-2021/14.33/Short Project/1433-short-project/1433-short-project-script.R', echo=TRUE)
setwd("C:\Users\prani\Dropbox (MIT)\2020-2021\14.33\Short Project\1433-short-project")
setwd("C:/Users/prani/Dropbox (MIT)/2020-2021/14.33/Short Project/1433-short-project")
source('C:/Users/prani/Dropbox (MIT)/2020-2021/14.33/Short Project/1433-short-project/1433-short-project-script.R', echo=TRUE)
df
source('C:/Users/prani/Dropbox (MIT)/2020-2021/14.33/Short Project/1433-short-project/1433-short-project-script.R', echo=TRUE)
source('C:/Users/prani/Dropbox (MIT)/2020-2021/14.33/Short Project/1433-short-project/1433-short-project-script.R', echo=TRUE)
df
source('C:/Users/prani/Dropbox (MIT)/2020-2021/14.33/Short Project/1433-short-project/1433-short-project-script.R', echo=TRUE)
df$bus_close_D <- (df$date > df$close_nonessential_bus) & (df$date < df$begin_reopen)
class(df$gov_inaug_date)
class(colnames(df))
lapply(df, class)
df[,c("gov_inaug_date", "begin_reopen")]
lapply(df, class)
date_cols <- df[,c("date", "close_nonessential_bus", "begin_reopen", "mandate_mask",  "gov_inaug_date", "begin_shelter_in_place")]
date_cols
date_cols <- c("date", "close_nonessential_bus", "begin_reopen", "mandate_mask",  "gov_inaug_date", "begin_shelter_in_place")
lapply(df[, date_cols], x <- as.Date(x))
lapply(df[, date_cols], x -> as.Date(x))
lapply(df[, date_cols], function(x) as.Date(x))
date_cols <- c("date")
source('C:/Users/prani/Dropbox (MIT)/2020-2021/14.33/Short Project/1433-short-project/1433-short-project-script.R', echo=TRUE)
source('C:/Users/prani/Dropbox (MIT)/2020-2021/14.33/Short Project/1433-short-project/1433-short-project-script.R', echo=TRUE)
source('C:/Users/prani/Dropbox (MIT)/2020-2021/14.33/Short Project/1433-short-project/1433-short-project-script.R', echo=TRUE)
source('C:/Users/prani/Dropbox (MIT)/2020-2021/14.33/Short Project/1433-short-project/1433-short-project-script.R', echo=TRUE)
df[,date_cols]
lapply(df[,date_cols], class)
source('C:/Users/prani/Dropbox (MIT)/2020-2021/14.33/Short Project/1433-short-project/1433-short-project-script.R', echo=TRUE)
lapply(df[,date_cols], class)
source('C:/Users/prani/Dropbox (MIT)/2020-2021/14.33/Short Project/1433-short-project/1433-short-project-script.R', echo=TRUE)
df
df$bus_close_D <- (df$date > df$close_nonessential_bus) & (df$date < df$begin_reopen)
df[40:50]
df[40:50,]
df[100:150,]
df[df$statefips = 1]
df[df$statefips == 1]
df[df$statefips == 1,]
df[df$statefips == 7,]
df[df$statefips == 8,]
df[df$statefips == 6,]
ca <- df[df$statefips = 6]
ca <- df[df$statefips == 6]
ca <- df[df$statefips == 6,]
ca
ggplot(date = ca, aes(x = date)) +
geom_point(aes(y = spend_aer))
ggplot(data = ca, aes(x = date)) +
geom_point(aes(y = spend_aer))
ggplot(data = ca, aes(x = date)) +
geom_point(aes(y = spend_aer)) +
geom_point(aes(y = gps_away_from_home))
ggplot(data = ca, aes(x = date)) +
geom_point(aes(y = spend_aer), color = 'blue') +
geom_point(aes(y = gps_away_from_home)) +
geom_hline(xintercept = )
geom_point(aes(y = gps_away_from_home
geom_point(aes(y = gps_away_from_home
geom_point(aes(y = gps_away_from_home)
geom_point(aes(y = gps_away_from_home)
ggplot(data = ca, aes(x = date)) +
geom_point(aes(y = spend_aer), color = 'blue') +
geom_point(aes(y = gps_away_from_home))
ggplot(data = ca, aes(x = date)) +
geom_point(aes(y = spend_aer), color = 'blue') +
geom_point(aes(y = gps_away_from_home)) +
geom_hline(xintercept = ca$close_nonessential_bus[0])
ggplot(data = ca, aes(x = date)) +
geom_point(aes(y = spend_aer), color = 'blue') +
geom_point(aes(y = gps_away_from_home)) +
geom_vline(xintercept = ca$close_nonessential_bus[0])
ggplot(data = ca, aes(x = date)) +
geom_point(aes(y = spend_aer), color = 'blue') +
geom_point(aes(y = gps_away_from_home)) +
geom_vline(xintercept = ca$close_nonessential_bus[1])
ggplot(data = ca, aes(x = date)) +
geom_point(aes(y = spend_aer), color = 'blue') +
geom_point(aes(y = gps_away_from_home)) +
geom_vline(xintercept = ca$close_nonessential_bus[1]) +
geom_vline(xintercept = ca$begin_reopen[1])
ggplot(data = ca, aes(x = date)) +
geom_point(aes(y = spend_aer), color = 'blue') +
geom_point(aes(y = gps_away_from_home)) +
geom_point(aes(y = spend_all), color = 'red') +
geom_vline(xintercept = ca$close_nonessential_bus[1]) +
geom_vline(xintercept = ca$begin_reopen[1])
ggplot(data = ca, aes(x = date)) +
geom_point(aes(y = spend_aer), color = 'blue') +
geom_point(aes(y = gps_away_from_home)) +
geom_point(aes(y = spend_all), color = 'red') +
geom_vline(xintercept = ca$close_nonessential_bus[1]) +
geom_vline(xintercept = ca$begin_reopen[1]) +
geom_vline(xintercept = ca$mandate_mask[1])
ggplot(data = ca, aes(x = date)) +
geom_point(aes(y = spend_aer), color = 'blue') +
geom_point(aes(y = gps_away_from_home)) +
geom_point(aes(y = spend_all), color = 'red') +
geom_vline(xintercept = ca$close_nonessential_bus[1]) +
geom_vline(xintercept = ca$begin_reopen[1]) +
geom_vline(xintercept = ca$mandate_mask[1])+
geom_vline(xintercept = ca$begin_shelter_in_place[1])
ggplot(data = ca, aes(x = date)) +
geom_point(aes(y = spend_aer), color = 'blue') +
geom_point(aes(y = gps_away_from_home)) +
geom_point(aes(y = spend_all), color = 'red') +
geom_vline(xintercept = ca$close_nonessential_bus[1]) +
geom_vline(xintercept = ca$begin_reopen[1]) +
geom_vline(xintercept = ca$mandate_mask[1])+
geom_vline(xintercept = ca$begin_shelter_in_place[1], color = 'red')
ggplot(data = df, aes(x = date)) +
facet_wrap(state_abbrev) +
geom_point(aes(y = spend_aer), color = 'blue') +
geom_point(aes(y = gps_away_from_home)) +
geom_point(aes(y = spend_all), color = 'red') +
geom_vline(xintercept = df$close_nonessential_bus[1]) +
geom_vline(xintercept = df$begin_reopen[1]) +
geom_vline(xintercept = df$mandate_mask[1])+
geom_vline(xintercept = df$begin_shelter_in_place[1], color = 'red')
ggplot(data = df, aes(x = date)) +
facet_wrap(~state_abbrev) +
geom_point(aes(y = spend_aer), color = 'blue') +
geom_point(aes(y = gps_away_from_home)) +
geom_point(aes(y = spend_all), color = 'red') +
geom_vline(xintercept = df$close_nonessential_bus[1]) +
geom_vline(xintercept = df$begin_reopen[1]) +
geom_vline(xintercept = df$mandate_mask[1])+
geom_vline(xintercept = df$begin_shelter_in_place[1], color = 'red')
ggplot(data = df, aes(x = date)) +
facet_wrap(~state_abbrev) +
geom_point(aes(y = spend_aer), color = 'blue') +
geom_point(aes(y = gps_away_from_home)) +
geom_point(aes(y = spend_all), color = 'red') +
geom_vline(xintercept = df$close_nonessential_bus[1]) +
geom_vline(xintercept = df$begin_reopen[1], color = 'green') +
geom_vline(xintercept = df$mandate_mask[1], color = 'blue')+
geom_vline(xintercept = df$begin_shelter_in_place[1], color = 'red')
ggplot(data = df, aes(x = date)) +
facet_wrap(~state_abbrev) +
geom_point(aes(y = spend_aer), color = 'blue') +
geom_point(aes(y = gps_away_from_home)) +
geom_point(aes(y = spend_all), color = 'red') +
geom_vline(xintercept = df$close_nonessential_bus[1]) +
geom_vline(xintercept = df$begin_shelter_in_place[1], color = 'red') +
geom_vline(xintercept = df$begin_reopen[1], color = 'green') +
geom_vline(xintercept = df$mandate_mask[1], color = 'blue')
ggplot(data = df, aes(x = date)) +
facet_wrap(~state_abbrev) +
geom_point(aes(y = spend_aer), color = 'blue', size = 1) +
geom_point(aes(y = gps_away_from_home)) +
geom_point(aes(y = spend_all), color = 'red') +
geom_vline(xintercept = df$close_nonessential_bus[1]) +
geom_vline(xintercept = df$begin_shelter_in_place[1], color = 'red') +
geom_vline(xintercept = df$begin_reopen[1], color = 'green') +
geom_vline(xintercept = df$mandate_mask[1], color = 'blue')
ggplot(data = df, aes(x = date)) +
facet_wrap(~state_abbrev) +
geom_point(aes(y = spend_aer), color = 'blue', size = 1) +
geom_point(aes(y = gps_away_from_home)) +
geom_point(aes(y = spend_all), color = 'red') +
geom_vline(xintercept = close_nonessential_bus) +
geom_vline(xintercept = df$begin_shelter_in_place[1], color = 'red') +
geom_vline(xintercept = df$begin_reopen[1], color = 'green') +
geom_vline(xintercept = df$mandate_mask[1], color = 'blue')
ggplot(data = df, aes(x = date)) +
facet_wrap(~state_abbrev) +
geom_point(aes(y = spend_aer), color = 'blue', size = 1) +
geom_point(aes(y = gps_away_from_home)) +
geom_point(aes(y = spend_all), color = 'red') +
geom_vline(aes(xintercept = close_nonessential_bus)) +
geom_vline(xintercept = df$begin_shelter_in_place[1], color = 'red') +
geom_vline(xintercept = df$begin_reopen[1], color = 'green') +
geom_vline(xintercept = df$mandate_mask[1], color = 'blue')
ggplot(data = df, aes(x = date)) +
facet_wrap(~state_abbrev) +
geom_point(aes(y = spend_aer), color = 'blue', size = 1) +
geom_point(aes(y = gps_away_from_home)) +
geom_point(aes(y = spend_all), color = 'red') +
geom_vline(aes(xintercept = close_nonessential_bus)) +
geom_vline(aes(xintercept = begin_shelter_in_place), color = 'red') +
geom_vline(aes(xintercept = begin_reopen), color = 'green') +
geom_vline(aes(xintercept = mandate_mask), color = 'blue')
ggplot(data = df, aes(x = date)) +
facet_wrap(~state_abbrev) +
geom_point(aes(y = spend_aer), color = 'blue', size = 0.25) +
geom_point(aes(y = gps_away_from_home)) +
geom_point(aes(y = spend_all), color = 'red') +
geom_vline(aes(xintercept = close_nonessential_bus)) +
geom_vline(aes(xintercept = begin_shelter_in_place), color = 'red') +
geom_vline(aes(xintercept = begin_reopen), color = 'green') +
geom_vline(aes(xintercept = mandate_mask), color = 'blue')
ggplot(data = df, aes(x = date)) +
facet_wrap(~state_abbrev) +
geom_point(aes(y = spend_aer), color = 'blue', size = 0.1) +
geom_point(aes(y = gps_away_from_home)) +
geom_point(aes(y = spend_all), color = 'red') +
geom_vline(aes(xintercept = close_nonessential_bus)) +
geom_vline(aes(xintercept = begin_shelter_in_place), color = 'red') +
geom_vline(aes(xintercept = begin_reopen), color = 'green') +
geom_vline(aes(xintercept = mandate_mask), color = 'blue')
ggplot(data = df, aes(x = date)) +
facet_wrap(~state_abbrev) +
geom_point(aes(y = spend_aer), color = 'blue', size = 0.1) +
geom_point(aes(y = gps_away_from_home), size = 0.1) +
geom_point(aes(y = spend_all), color = 'red'. size = 0.1) +
geom_vline(aes(xintercept = close_nonessential_bus)) +
geom_vline(aes(xintercept = begin_shelter_in_place), color = 'red') +
geom_vline(aes(xintercept = begin_reopen), color = 'green') +
geom_vline(aes(xintercept = mandate_mask), color = 'blue')
ggplot(data = df, aes(x = date)) +
facet_wrap(~state_abbrev) +
geom_point(aes(y = spend_aer), color = 'blue', size = 0.1) +
geom_point(aes(y = gps_away_from_home), size = 0.1) +
geom_point(aes(y = spend_all), color = 'red', size = 0.1) +
geom_vline(aes(xintercept = close_nonessential_bus)) +
geom_vline(aes(xintercept = begin_shelter_in_place), color = 'red') +
geom_vline(aes(xintercept = begin_reopen), color = 'green') +
geom_vline(aes(xintercept = mandate_mask), color = 'blue')
source('C:/Users/prani/Dropbox (MIT)/2020-2021/14.33/Short Project/1433-short-project/1433-short-project-script.R', echo=TRUE)
